name: poetry application

on:
  push:
    branches: [master]
  pull_request:

jobs:
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [1.3.1]
        os: [ubuntu-latest]
    env:
      POETRY_ROOT_PATH: fortune-cookie-factory

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          cd $POETRY_ROOT_PATH
          poetry install
      - name: Run tests
        run: |
          cd $POETRY_ROOT_PATH
          poetry run pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        
  security-test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [1.3.1]
        os: [ubuntu-latest]
    env:
      POETRY_ROOT_PATH: fortune-cookie-factory

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          cd $POETRY_ROOT_PATH
          poetry install
      - name: Run security check
        run: |
          cd $POETRY_ROOT_PATH
          echo 'run bandit'
          poetry run bandit fortune_cookie
          echo 'run safety'
          poetry run safety check

  deploy:
    needs: [unit-test, security-test]
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [1.3.1]
        os: [ubuntu-latest]
    env:
      POETRY_ROOT_PATH: fortune-cookie-factory
      POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          cd $POETRY_ROOT_PATH
          poetry install
      - name: Deploy Poetry Package
        run: |
          cd $POETRY_ROOT_PATH
          poetry config pypi-token.pypi $POETRY_PYPI_TOKEN_PYPI
          poetry publish --build